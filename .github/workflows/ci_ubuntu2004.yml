name: CI on Ubuntu 20.04

on:
  push:
    branches:
      # Push events to branches matching refs/heads/master
      - 'master'
  pull_request:

concurrency:
  group: ubuntu2004-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CMAKE_VERSION: 3.15.4
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -ex {0}

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ubuntu-20.04
    timeout-minutes: 120
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: "gcc8 (c++17)"
            cxx: "g++-8"
            cc: "gcc-8"
            build_type: Release
            cxx_flags: "-std=c++17"

          - name: "gcc7 (c++17)"
            cxx: "g++-7"
            cc: "gcc-7"
            build_type: Release
            cxx_flags: "-std=c++17"

          - name: "clang10"
            cxx: "clang++-10"
            cc: "clang-10"
            build_type: Release
            cxx_flags: "-std=c++20"

    steps:
      - name: Checkout TDL
        uses: actions/checkout@v2
        with:
          path: tdl
          fetch-depth: 2
          submodules: false

      - name: Checkout SeqAn3
        uses: actions/checkout@v2
        with:
          repository: seqan/seqan3
          ref: 383e8f8d638f8a727a79136ce96ae7642befe39f
          path: seqan3
          fetch-depth: 1
          submodules: false

      - name: Configure APT
        continue-on-error: true
        run: bash ./seqan3/.github/workflows/scripts/configure_apt.sh

      - name: Install CMake
        run: bash ./seqan3/.github/workflows/scripts/install_cmake.sh

      - name: Install ccache
        run: |
          conda install --yes --override-channels --channel conda-forge ccache
          sudo ln -s $CONDA/bin/ccache /usr/bin/ccache

      - name: Install compiler ${{ matrix.cxx }}
        run: sudo apt-get install --yes ${{ matrix.cxx }}

      - name: Load ccache
        uses: actions/cache@v2
        with:
          path: .ccache
          key: ${{ runner.os }}-${{ matrix.name }}-ccache-${{ github.ref }}-${{ github.run_number }}
          # Restoring: From current branch, otherwise from base branch, otherwise from any branch.
          restore-keys: |
            ${{ runner.os }}-${{ matrix.name }}-ccache-${{ github.ref }}
            ${{ runner.os }}-${{ matrix.name }}-ccache-${{ github.base_ref }}
            ${{ runner.os }}-${{ matrix.name }}-ccache-

      - name: Tool versions
        run: |
          env cmake --version
          env ${{ matrix.cxx }} --version
          env ccache --version

      - name: Configure tests
        env:
          CXX: ${{ matrix.cxx }}
          CC: ${{ matrix.cc }}
        run: |
          mkdir tdl-build
          cd tdl-build
          cmake ../tdl/test -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
                            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
                            -DCMAKE_CXX_FLAGS="-Wall -Wextra -pedantic ${{ matrix.cxx_flags }}"
          make -j2 gtest_build

      - name: Build tests
        env:
          CCACHE_BASEDIR: ${{ github.workspace }}
          CCACHE_DIR: ${{ github.workspace }}/.ccache
          CCACHE_COMPRESS: true
          CCACHE_COMPRESSLEVEL: 12
          CCACHE_MAXSIZE: 75M
        run: |
          ccache -z
          cd tdl-build
          make -k -j2
          ccache -sv

      - name: Run tests
        run: |
          cd tdl-build
          ctest . -j2 --output-on-failure
