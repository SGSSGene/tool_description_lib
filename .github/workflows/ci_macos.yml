name: CI on macOS

on:
  push:
    branches:
      # Push events to branches matching refs/heads/master
      - 'master'
  pull_request:
  # Enables a manual trigger, may run on any branch
  workflow_dispatch:

concurrency:
  group: macos-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CMAKE_VERSION: 3.15.1
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -ex {0}

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: macos-10.15
    timeout-minutes: 180
    if: github.repository_owner == 'deNBI-cibi' || github.event_name == 'workflow_dispatch'
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "gcc11 (c++20)"
            cxx: "g++-11"
            cc: "gcc-11"
            build_type: Release
            cxx_flags: "-std=c++20"

          - name: "gcc10 (c++20)"
            cxx: "g++-10"
            cc: "gcc-10"
            build_type: Release
            cxx_flags: "-std=c++20"

          - name: "gcc9 (c++2a)"
            cxx: "g++-9"
            cc: "gcc-9"
            build_type: Release
            cxx_flags: "-std=c++2a"

          - name: "gcc8 (c++17)"
            cxx: "g++-8"
            cc: "gcc-8"
            build_type: Release
            cxx_flags: "-std=c++17"

          - name: "gcc7 (c++17)"
            cxx: "g++-7"
            cc: "gcc-7"
            build_type: Release
            cxx_flags: "-std=c++17"

          - name: "clang12 (c++20)"
            cxx: "clang++-12"
            cc: "clang-12"
            build_type: Release
            cxx_flags: "-std=c++20"

          - name: "clang11 (c++20)"
            cxx: "clang++-11"
            cc: "clang-11"
            build_type: Release
            cxx_flags: "-std=c++20"

          - name: "clang9 (c++2a)"
            cxx: "clang++-9"
            cc: "clang-9"
            build_type: Release
            cxx_flags: "-std=c++2a"

    steps:
      - name: Checkout TDL
        uses: actions/checkout@v2
        with:
          path: tdl
          fetch-depth: 2

      - name: Checkout SeqAn3
        uses: actions/checkout@v2
        with:
          repository: seqan/seqan3
          ref: f10e557b61428ff7faac8b10f18b9087d1ff2663
          path: seqan3
          fetch-depth: 1
          submodules: false

      - name: Configure Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Install CMake
        run: bash ./seqan3/.github/workflows/scripts/install_cmake.sh

      - name: Install compiler ${{ matrix.cxx }}
        env:
          CC: ${{ matrix.cc }}
        run: bash ./seqan3/.github/workflows/scripts/install_via_brew.sh $(echo ${CC/clang/llvm} | awk -F '-' '{print $1, $2}')

      - name: Tool versions
        run: |
          env cmake --version
          env ${{ matrix.cxx }} --version

      - name: Install dependencies
        run: bash ./seqan3/.github/workflows/scripts/install_via_brew.sh boost

      - name: Configure tests
        env:
          CXX: ${{ matrix.cxx }}
          CC: ${{ matrix.cc }}
        run: |
          ls
          mkdir tdl-build
          cd tdl-build
          cmake ../tdl/test -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                            -DCMAKE_CXX_FLAGS="${{ matrix.cxx_flags }}"
      - name: Build tests
        run: |
          cd tdl-build
          make -k -j3

      - name: Run tests
        run: |
          cd tdl-build
          ctest . -j3 --output-on-failure --timeout 240 \
            || ctest . -j3 --output-on-failure --timeout 240 --rerun-failed
